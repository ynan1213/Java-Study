[
  {
    "extension": "revapi.filter",
    "configuration": {
      "elements": {
        "exclude": [
          "class org\\.apache\\.logging\\.log4j\\.util\\.Activator",
          "class org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil",
          "class org\\.apache\\.logging.log4j\\.util\\.PrivateSecurityManagerStackTraceUtil",
          "class org\\.apache\\.logging\\.log4j\\.util\\.PropertiesUtil",
          "class org\\.apache\\.logging\\.log4j\\.util\\.ProviderUtil",
          "class org\\.apache\\.logging.log4j\\.util\\.StackLocator",
          "class org\\.apache\\.logging\\.log4j\\.util\\.StackLocatorUtil"
        ]
      }
    }
  },
  {
    "extension": "revapi.ignore",
    "configuration": [
      {
        "code": "java.method.removed",
        "old": "method org.apache.logging.log4j.util.StackLocator.PrivateSecurityManager org.apache.logging.log4j.util.StackLocator::getSecurityManager()",
        "justification": "Internal inner class moved to its own class so it can be shared with Java 9"
      },
      {
        "code": "java.method.nowStatic",
        "old": "method java.lang.String org.apache.logging.log4j.util.Strings::toRootUpperCase(java.lang.String)",
        "new": "method java.lang.String org.apache.logging.log4j.util.Strings::toRootUpperCase(java.lang.String)",
        "justification": "Method was inaccessible"
      },
      {
        "code": "java.field.serialVersionUIDUnchanged",
        "old": "field org.apache.logging.log4j.spi.AbstractLogger.serialVersionUID",
        "new": "field org.apache.logging.log4j.spi.AbstractLogger.serialVersionUID",
        "serialVersionUID": "2",
        "justification": "LOG4J2-2639 - Add builder pattern to Logger interface"
      },
      {
        "code": "java.class.noLongerImplementsInterface",
        "old": "class org.apache.logging.log4j.internal.DefaultLogBuilder",
        "new": "class org.apache.logging.log4j.internal.DefaultLogBuilder",
        "interface": "java.io.Serializable",
        "justification": "Internal class that should not be Serializable."
      }
    ]
  }
]
