############################# rabbit数据源配置 ###################################
# 如果 spring.cloud.stream.binders.xxx下面没有配置environment.spring.rabbitmq.host、port、username、password
# 就会读取这里的，相当于spring整合rabbit的全局配置
spring.rabbitmq.addresses=47.100.24.106
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=123456
spring.rabbitmq.virtual-host=my_vhost

############################# binder配置 ###################################
# 配置Binder，spring-cloud-stream-binder-rabbit依赖会自动导入name=rabbit的binder
# 如果想自定义多个binder，如下配置
#   ①：type类型是必须指定的，指向spring.binders文件中存在的key值
spring.cloud.stream.binders.xxx-binder1.type=rabbit
#   ②：如果配置为true(默认就为true)，当bindings未指定binder的时候就会读取到这里
spring.cloud.stream.binders.xxx-binder1.default-candidate=true
#   ③：是否继承应用程序的环境配置（就是上面的spring.rabbitmq.address...）默认为true
spring.cloud.stream.binders.xxx-binder1.inherit-environment=false
spring.cloud.stream.binders.xxx-binder1.environment.spring.rabbitmq.host=47.100.24.106
spring.cloud.stream.binders.xxx-binder1.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.xxx-binder1.environment.spring.rabbitmq.username=admin
spring.cloud.stream.binders.xxx-binder1.environment.spring.rabbitmq.passowrd=123456
spring.cloud.stream.binders.xxx-binder1.environment.spring.rabbitmq.virtual-host=my_vhost
spring.cloud.stream.binders.xxx-binder1.environment.aaa.bbb=xxx
spring.cloud.stream.binders.xxx-binder1.environment.aaa.ccc=yyy


spring.cloud.stream.binders.xxx-binder2.type=rabbit
# 上面自定义的binder已经为true的情况下，这里就不能再配置为true了，否则就有两个候选，无法区分的情况下就会抛异常
spring.cloud.stream.binders.xxx-binder2.default-candidate=false
spring.cloud.stream.binders.xxx-binder2.environment.spring.kafka.host=192.168.0.102
spring.cloud.stream.binders.xxx-binder2.environment.spring.kafka.port=5672
spring.cloud.stream.binders.xxx-binder2.environment.spring.kafka.username=guest
spring.cloud.stream.binders.xxx-binder2.environment.spring.kafka.passowrd=guest

# 上面自定义了多个binder，bindings如何指定使用哪一个呢？
# 方式一：全局指定，这里应该配置xxx-binder1或者xxx-binder2
spring.cloud.stream.defaultBinder=xxx-binder1
# 方式二：在每个 bindings 上指定binder
# spring.cloud.stream.bindings.xxx-binder1.binder=kafka
# spring.cloud.stream.bindings.xxx-binder2.binder=rabbit

############################# bindings配置:output ###################################
#   ①：如果不配置destination，默认就取bindings的名称，这里就是 xxx-output，在rabbit中，这个值就是exchange的名称
spring.cloud.stream.bindings.xxx-output.destination=Exchanges-yuan
#   ②：如果不配置content-type，默认是application/json
spring.cloud.stream.bindings.xxx-output.content-type=application/json
#   ③：如果这里不指定binder，会取全局默认的spring.cloud.stream.defaultBinder，如果也未配置，取default-candidate=true的，有多个的话会抛异常
#spring.cloud.stream.bindings.xxx-output.binder=

# 这些配置会绑定到 ExtendedProducerProperties 对象中
#   ①：默认值false
#spring.cloud.stream.bindings.xxx-output.producer.error-channel-enabled=false
#spring.cloud.stream.bindings.xxx-output.producer.partition-count=13
#   不知道这个参数的用处
#spring.cloud.stream.bindings.xxx-output.producer.required-groups=

# 下面的这些配置会被绑定到 ExtendedProducerProperties 中的  T extension对象中，在rabbit的binder中的实现是 RabbitProducerProperties
#   ①：配置了prefix后，后面处理destination时会自动在前面加上该前缀
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.prefix=xxx-prefix
#   ②：默认topic，详情见 ExchangeTypes 常量类
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.exchange-type=topic
#   ③：是否持久化，默认值 true
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.exchange-durable=true
#   ④：默认值 false
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.exchange-auto-delete=false
#   ⑤：默认值 false
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.delayed-exchange=true
#   ⑥：默认值 false
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.declare-exchange=true
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.batch-size=123
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.batch-timeout=4444
#spring.cloud.stream.rabbit.bindings.xxx-output.producer.transacted=false

############################# bindings配置:input ###################################
# ①：多个用逗号分隔
spring.cloud.stream.bindings.xxx-input.destination=Exchanges-yuan
spring.cloud.stream.bindings.xxx-input.group=xxx-group

# 这些配置会绑定到 ExtendedConsumerProperties 对象
#   ①：默认值false
#spring.cloud.stream.bindings.xxx-input.consumer.multiplex=false
#   ②：默认false，当group为空的时候，如果这里配置了true，会报错
#spring.cloud.stream.bindings.xxx-input.consumer.partitioned=false

# 下面的这些配置会被绑定到 ExtendedConsumerProperties 中的  T extension对象中，在rabbit的binder中的实现是 RabbitConsumerProperties
#spring.cloud.stream.rabbit.bindings.xxx-input.consumer.exchangeType=topic